cache:                                                                                                                               
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .m2
  - .sonar/cache

stages:
  - build
  - release
  - quality

variables:
  MAVEN_USER: 'deployment'
  MAVEN_CLI_OPTS: "-DskipTests --batch-mode -Dmaven.repo.local=$CI_PROJECT_DIR/.m2"
#  MAVEN_CLI_OPTS: "-DskipTests --batch-mode -Dmaven.repo.local=$CI_PROJECT_DIR/test-m2"
  UPLOAD_URL: '$NEXUS_URL/$CI_COMMIT_TAG/'
  NEXUS_CREDENTIALS: '$NEXUS_USER:$NEXUS_PASSWORD'
  SONAR_HOST_URL: 'https://sonar.geomatys.com'
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  SONAR_HOST_URL: 'https://sonar.geomatys.com'
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

build-linux:
  image: images.geomatys.com/ci/maven:3.6.3-oraclejdk-8-openjfx
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    # Import certificate to fulfill part 5 of the readme
    - keytool -importcert -file $CERTIFICATE -alias certificate -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt
    # Do a clean build
    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -Pall
    # Build native JFX packages
    - apt update
    - apt install -yqq fakeroot rpm
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -f launcher/pom.xml
    - mkdir linux
    - mv launcher plugin-* linux
  artifacts:
    paths:
      - linux

build-windows:
  stage: build
  tags:
    - powershell
#  rules:
    #- if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    #- keytool -importcert -file $CERTIFICATE -alias certificate -storepass changeit -noprompt
    - mvn clean install -U -s $MAVEN_SETTINGS -DskipTests -Pall
#    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -Pall
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -DskipTests -f launcher\pom.xml
    - mkdir windows
    - mv launcher windows
    - mv plugin-* windows
  artifacts:
    paths:
      - windows

build-macos:
  stage: build
  tags:
    - macosx
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != null
  script:
    #- keytool -importcert -file $CERTIFICATE -alias certificate -storepass changeit -noprompt
    - mvn clean install $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -Pall
    - mvn jfx:native $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS -f launcher/pom.xml
    - mkdir macos
    - mv launcher plugin-* macos
  artifacts:
    paths:
      - macos

release:
  stage: release
  image: curlimages/curl:7.83.1
  needs:
    - build-linux
    - build-windows
    - build-macos
  rules:
    - if: $CI_COMMIT_TAG =~ '/^\d+.\d+-?.*$/'
  script:
    - tar zcvf linux.tar.gz linux
    - tar zcvf windows.tar.gz windows
    - tar zcvf macos.tar.gz macos
    - curl -k --fail -u $NEXUS_CREDENTIALS --upload-file linux.tar.gz $UPLOAD_URL
    - curl -k --fail -u $NEXUS_CREDENTIALS --upload-file windows.tar.gz $UPLOAD_URL
    - curl -k --fail -u $NEXUS_CREDENTIALS --upload-file macos.tar.gz $UPLOAD_URL

quality:
  image: images.geomatys.com/ci/maven:3-jdk-8-openjfx
  stage: quality
  script:
    - mvn sonar:sonar $MAVEN_CLI_OPTS -s $MAVEN_SETTINGS
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.java.binaries=${CI_PROJECT_DIR}/.m2
      $MAVEN_CLI_OPTS -s $SETTINGS_MAVEN
  allow_failure: true
  needs: []
  only:
    variables:
      - $SONAR_TOKEN
